AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  melbourne_city_playground

Globals:
  Function:
    Timeout: 120 # some things take at least 2 minutes to return (like data visualizations)
  Api:
    BinaryMediaTypes:
      - "*~1*" # all images to be returned via API gateway

Resources:
  FlaskEntryPointFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Role: arn:aws:iam::119291007423:role/PlaygroundLambdaWebApp # role defined in AWS console, has necessary permissions
      PackageType: Image
      MemorySize: 512
      Events:
        FlaskEntryPoint:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any

        FlaskHomePage: # separate event for default route seems necessary for some reason. All other routes work through the proxy above
          Type: Api
          Properties:
            Path: /
            Method: any
    Metadata:
      DockerTag: python3.7-v1
      DockerContext: ./
      Dockerfile: Dockerfile

  KeepWarmRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "KeepWarmEventsRuleRole"
      Policies:
        - PolicyName: InvokeApiDestination
          PolicyDocument:
            "Version": "2012-10-17"
            "Statement":
              - "Effect": "Allow"
                "Action": ["events:InvokeApiDestination"]
                "Resource": ["arn:aws:events:::api-destination/*"]
      AssumeRolePolicyDocument:
        "Version": "2012-10-17"
        "Statement":
          - "Effect": "Allow"
            "Principal": { "Service": ["events.amazonaws.com"] }
            "Action": ["sts:AssumeRole"]

  KeepWarmRule:
    Type: AWS::Events::Rule
    DependsOn:
      - KeepWarmApiDestination
      - KeepWarmRole
    Properties:
      Description: "Hits the /utils/ping endpoint to keep the serverless function alive"
      ScheduleExpression: "rate(5 minutes)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt KeepWarmApiDestination.Arn
          RoleArn: !GetAtt KeepWarmRole.Arn
          Id: "KeepWarmTarget"

  KeepWarmConnection:
    Type: AWS::Events::Connection
    Properties:
      AuthorizationType: BASIC
      AuthParameters:
        BasicAuthParameters:
          Username: "EventBridge"
          Password: "None"

      Description: Connection required for Http Api Destination Resource
      Name: BasicUnauthenticatedConnection

  KeepWarmApiDestination:
    Type: AWS::Events::ApiDestination
    DependsOn: KeepWarmConnection
    Properties:
      ConnectionArn: !GetAtt KeepWarmConnection.Arn
      Description: "Endpoint for keeping lambda function warm"
      HttpMethod: GET
      InvocationEndpoint: !Sub "https://6pdglgxshl.execute-api.ap-southeast-2.amazonaws.com/Prod/utils/ping"
      InvocationRateLimitPerSecond: 5
      Name: KeepWarmAPIDestination

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  FlaskEntryPointApi:
    Description: "API Gateway Endpoint for Flask API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  FlaskEntryPointFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt FlaskEntryPointFunction.Arn
